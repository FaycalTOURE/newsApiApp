<h1>Welcome to news API v 1.0</h1>

<div class="container">
    <button id="disconnect">Disconnect</button>
    {{> user/register }} <br>
    {{> user/login }} <br>
    {{> search }}
</div>

<script>
    window.addEventListener('DOMContentLoaded', function (e) {
        const sources = ["ABC News (AU)", "Aftenposten", "Al Jazeera English", "ANSA.it", "Argaam",
            "Ars Technica", "Ary News", "Associated Press", "Australian Financial Review", "Axios",
            "BBC News","BBC Sport","Bild","Blasting News (BR)","Bleacher Report","Bloomberg","Breitbart News",
            "Business Insider","Business Insider (UK)","Buzzfeed","CBC News","CBS News","CNBC","CNN","CNN Spanish",
            "Crypto Coins News","Der Tagesspiegel","Die Zeit","El Mundo","Engadget","Entertainment Weekly","ESPN",
            "ESPN Cric Info","Financial Post","Focus","Football Italia","Fortune","FourFourTwo","Fox News","Fox Sports",
            "Globo","Google News","Google News (Argentina)","Google News (Australia)","Google News (Brasil)",
            "Google News (Canada)","Google News (France)","Google News (India)","Google News (Israel)",
            "Google News (Italy)","Google News (Russia)","Google News (Saudi Arabia)","Google News (UK)",
            "Göteborgs-Posten","Gruenderszene","Hacker News","Handelsblatt","IGN","Il Sole 24 Ore","Independent",
            "Infobae","InfoMoney","La Gaceta","La Nacion","La Repubblica","Le Monde","Lenta","L'equipe","Les Echos",
            "Libération","Marca","Mashable","Medical News Today","MSNBC","MTV News","MTV News (UK)","National Geographic",
            "National Review","NBC News","News24","New Scientist","News.com.au","Newsweek","New York Magazine","Next Big Future",
            "NFL News","NHL News","NRK","Politico","Polygon","RBC","Recode","Reddit /r/all","Reuters","RT","RTE","RTL Nieuws","SABQ",
            "Spiegel Online","Svenska Dagbladet","T3n","TalkSport",
            "TechCrunch","TechCrunch (CN)","TechRadar","The American Conservative","The Globe And Mail","The Hill","The Hindu","The Huffington Post","The Irish Times",
            "The Jerusalem Post","The Lad Bible","The Next Web","The Sport Bible","The Times of India","The Verge","The Wall Street Journal","The Washington Post",
            "The Washington Times","Time","USA Today","Vice News","Wired","Wired.de","Wirtschafts Woche","Xinhua Net","Ynet"
        ];

        // form
        const loginForm = document.forms.loginForm;
        const registerForm = document.forms.registerForm;
        const searchForm = document.forms.searchForm;
        const disconnectBtn = document.getElementById('disconnect');
        const searcSelectBox = searchForm.elements['requestSource'];

        for (let i = 0; i < sources.length; i++){
            let opt = document.createElement('option');
            opt.value = sources[i].toLowerCase().replace(/\s+/gi, '-').replace('/\[{()}]/gi', '').replace(/[\])}[{(]/g, '');
            opt.innerHTML = sources[i];
            searcSelectBox.appendChild(opt);
        }

        function isLogged() {
            return !!getCookie('user_auth_status');
        }

        if(isLogged()){
            loginForm.style.display = 'none';
            registerForm.style.display = 'none';
            disconnectBtn.style.display = 'block';

            if(localStorage.getItem('selectedSource')){
                searcSelectBox.value = localStorage.getItem('selectedSource');
            }

            if(localStorage.getItem('selectedQuery')){
                searchForm.elements['requestQuery'].value = localStorage.getItem('selectedQuery');
            }
        }else{
            loginForm.style.display = 'block';
            registerForm.style.display = 'block';
            disconnectBtn.style.display = 'none';
        }

        function select_value(selectBox){
            let oSelect = selectBox;
            if(oSelect.selectedIndex !== -1 ){
                return oSelect.value;
            }
        }

        function save_storage(val) {
            localStorage.setItem('selectedSource', val.source);
            localStorage.setItem('selectedQuery', val.query);
        }

        for (let i = 0; i < document.forms.length; i++){
            document.forms[i].addEventListener('submit', function (e) {
                e.preventDefault();
                if(validerForm(document.forms[i])){
                    const formData = new FormData(e.target);
                    if(document.forms[i].name === 'loginForm'){
                        // Connect
                        let user = getConnexion('http://localhost:3888/api/auth/login', {
                            email: formData.get('email'),
                            password: formData.get('password')
                        });
                        window.location.reload();
                    }
                    if(document.forms[i].name === 'registerForm'){
                        registerMe('http://localhost:3888/api/auth/register', {
                            email: formData.get('email'),
                            password: formData.get('password'),
                            pseudo: formData.get('pseudo')
                        });
                    }
                    if(document.forms[i].name === 'searchForm'){
                        customFetch('POST', {
                            uri : 'http://localhost:3888/api/news',
                            news: {
                                requestLanguage : 'en',
                                requestSource : select_value(searcSelectBox),
                                requestQuery :  formData.get('requestQuery')
                            }
                        }).then(function(data){
                            let list = document.getElementById('articles');

                            if(data.error)
                                return data;

                            if(data.status === 'ok' && data.articles.length > 0){
                                // init
                                list.innerHTML = '';

                                for(let i = 0; i < data.articles.length; i++){
                                    let li = document.createElement('li');
                                    let content = document.createTextNode(data.articles[i].description);
                                    li.appendChild(content);
                                    list.appendChild(li);
                                }
                            }
                            if(isLogged()){
                                save_storage({source : select_value(searcSelectBox), query : formData.get('requestQuery') });
                            }
                        });
                    }
                }
            })
        }

        function validerForm(f) {
            let erreurText = '';
            for(let i = 0; i < f.elements.length; i++){
                let element = f.elements[i];
                switch (element.type) {
                    case 'text':
                    case 'email':
                    case 'password':
                        if(element.value.replace(/\s/g, "") === ""){
                            erreurText += element.name + '\n';
                        }
                        break;

                }
            }
            if(erreurText === ''){
                return true;
            }else{
                window.alert('veuillez renseigner ces champs : ' + '\n' + erreurText);
            }
        }

        function addToBucket(index=null, sources) {
            // searchForm.elements['sourceSelection'].selectedIndex
            if(index){
                if(sources.indexOf(index) !== -1){
                    let indexToAdd = index;
                    //...
                }
            }
        }

        function getUserData(uri, token) {
            if(token && uri){
                customFetch('GET', {
                    token,
                    uri
                }).then(function (user) {
                    if(user.error)
                        return user;
                    console.log(user);
                    return user;
                });
            }
        }

        function getConnexion(url, data) {
            if(url){
                customFetch('POST', {
                    uri : url,
                    body: data
                }).then(function(data){
                    if(data.error)
                        return data;
                    if(data.auth){
                        getUserData('http://localhost:3888/api/auth/user', data.token);
                    }
                });
            }
        }

        function registerMe(url, data) {
            if(url){
                customFetch('POST', {
                    uri : url,
                    register: data
                }).then(function(data){
                    console.log(data);
                    if(data.error)
                        return data;
                    if(data.auth){
                        getConnexion('http://localhost:3888/api/auth/login', {
                            email: data.identity.email,
                            password: registerForm.elements['password'].value
                        });
                        window.location.reload();
                    }
                });
            }
        }

        function getCookie(name) {
            let pos = document.cookie.indexOf(name + '=');
            if(pos !== -1){
                let pos2 = document.cookie.indexOf(';', pos);
                if(pos2){
                    return unescape(document.cookie.substring(pos + name.length + 1));
                }else{
                    return unescape(document.cookie.substring(pos + name.length + 1, pos2));
                }
            }
        }

        function logout() {
            document.cookie = 'user_auth_status='+ getCookie('user_auth_status') +'; path=/; max-age=0';
            window.location.reload();
        }


        function customFetch(method, options) {
            let myHeaders = new Headers();

            let myInit = {
                method: method,
                mode: 'cors',
                cache: 'default'
            };

            if(options.token){
                myHeaders.set('x-access-token', options.token);
            }

            if(options.body){
                myHeaders.append('Content-Type', 'application/x-www-form-urlencoded');
                myInit.body = 'email=' + options.body.email + '&password=' + options.body.password ; // new FormData(document.getElementById('login-form'))
                myHeaders.append('Content-Length', myInit.body.length);
            }

            if(options.register){
                myHeaders.append('Content-Type', 'application/x-www-form-urlencoded');
                myInit.body = 'email=' + options.register.email + '&password=' + options.register.password + '&pseudo=' + options.register.pseudo; // new FormData(document.getElementById('login-form'))
                myHeaders.append('Content-Length', myInit.body.length);
            }

            if(options.news){
                myHeaders.append('Content-Type', 'application/x-www-form-urlencoded');
                myInit.body = 'requestLanguage=' + options.news.requestLanguage + '&requestSource=' + options.news.requestSource + '&requestQuery=' + options.news.requestQuery ; // new FormData(document.getElementById('login-form'))
                myHeaders.append('Content-Length', myInit.body.length);
            }

            myInit.headers = myHeaders;

            var myRequest = new Request(options.uri , myInit);

            return fetch(myRequest)
                .then(function(response) {
                    if(!response.ok){
                        return {error : true};
                    }else{
                        return response.json().then(function(json) {
                            return json;
                        });
                    }
                })
                .catch(function(error) {
                    return console.log('Il y a eu un problème avec l\'opération fetch: ' + error.message);
                });
        }

        // Disconnect
        disconnectBtn.addEventListener('click', function (e) {
            logout();
        });
    });
</script>
